openapi: '3.0.2'
info:
  title: Mio 3rd Anniversary Fan-Website API
  version: '1.0.0'
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: 'https://api.miosha.moe/anniv3/{version}'
    description: Live server
    variables:
      version:
        enum:
          - dev
        default: dev
        description: The API version.
  - url: 'http://localhost:{port}'
    description: Locally-hosted server
    variables:
      port:
        default: '8855'
        description: The port the server listens to


paths:
  /messages:
    get:
      tags:
        - Messages
      summary: Retrieves posted messages.
      description: >
        Retrieves posted messages in a paginated format.

        There is no guarantee that the message list will not change between calls
        to this method, so the same call in different points in time may give different results.
      operationId: getMessages
      x-eov-operation-handler: messagesHandler
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          required: true
          description: The number of the page to retrieve
        - in: query
          name: pageSize
          schema:
            type: integer
            minimum: 1
            maximum: 100
          required: true
          description: The number of items to use per page
      responses:
        '200':
          description: Page found and returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: The number of the page that was retrieved
                  pageSize:
                    type: integer
                    description: The maximum size of the page
                  pageCount:
                    type: integer
                    description: The number of pages that exist with the given page size
                  pageData:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: There is no page with the given number for the given page size
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Error'
                  - type: object
                    properties:
                      pageCount:
                        type: integer
                        description: The number of pages that exist with the given page size
                    required:
                      - pageCount
    post:
      tags:
        - Messages
        - Submission
      summary: Posts a new message.
      operationId: postMessage
      x-eov-operation-handler: messagesHandler
      requestBody:
        description: The content of the message to post
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageContent'
      responses:
        '201':
          description: Message posted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageMetadata'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: >
            There is already a message with the given author.
            The response body provides the ID and posting time of the existing message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageMetadata'
        '429':
          $ref: '#/components/responses/RateLimit'

components:
  responses:
    BadRequest:
      description: The request sent by the client was malformed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    RateLimit:
      description: The user has sent too many requests in a short amount of time
      headers:
        Retry-After:
          schema:
            type: integer
          description: How many seconds to wait before trying again

  schemas:
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
      required:
        - status
        - message
    MessageId:
      description: The ID of a message
      type: integer
    MessageContent:
      description: The main data of a message
      type: object
      properties:
        author:
          description: The user that posted the message
          type: object
          properties:
            name:
              description: The name of the user
              type: string
              minLength: 1
              maxLength: 20
            avatar:
              description: | 
                The image frames that compose the animated user avatar.
                If a single frame, the avatar is a static image.
                May be empty, in which case a default avatar is used.
              type: array
              maxItems: 2
              items:
                type: string
                format: uri
          required:
            - name
            - avatar
        content:
          description: The content of the message
          type: string
          minLength: 1
          maxLength: 500
      required:
        - author
        - content
    MessageMetadata:
      description: The metadata of a message
      type: object
      properties:
        id:
          $ref: '#/components/schemas/MessageId'
        timestamp:
          description: The timestamp of when the message was posted
          type: string
          format: date-time
      required:
        - id
        - timestamp
    Message:
      allOf:
        - $ref: '#/components/schemas/MessageMetadata'
        - $ref: '#/components/schemas/MessageContent'